import aiosqlite
from datetime import datetime, timedelta
from config import db_users, db_schedules


def get_next_day_name():
    days = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"]
    next_day = datetime.now() + timedelta(days=1)
    return days[next_day.weekday()]


def get_week_part():
    today = datetime.now()
    week_number = today.isocalendar()[1]

    if today.weekday() == 6:
        week_number += 1

    return "–ß–∏—Å–ª–∏—Ç–µ–ª—å" if week_number % 2 == 0 else "–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å"

async def send_notifications(bot):
    next_day = get_next_day_name()
    week_part = get_week_part()  

    async with aiosqlite.connect(db_users) as users_db:
        cursor = await users_db.execute("""
            SELECT user_id FROM users WHERE notification_state = 1
        """)
        users = await cursor.fetchall()
        await cursor.close()

    if not users:
        print("–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏")
        return

    async with aiosqlite.connect(db_schedules) as schedules_db:
        for user in users:
            user_id = user[0]

            cursor = await schedules_db.execute("""
                SELECT time, chzn, para FROM user_schedules
                WHERE user_id = ? AND day = ? AND (chzn = "–ß–∏—Å–ª/–ó–Ω–∞–º–µ–Ω" OR chzn = ?)
                ORDER BY time
            """, (user_id, next_day, week_part))
            schedule = await cursor.fetchall()
            await cursor.close()

            if schedule:
                schedule_text = f"<b>üîî–í–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ ({next_day} | {week_part}):</b>\n\n"
                for idx, entry in enumerate (schedule, start = 1):
                    time, chzn, para = entry
                    schedule_text += f"<b>{idx} –ø–∞—Ä–∞:</b> {time} | {para}\n"

                try:
                    await bot.send_message(chat_id=user_id, text=schedule_text, parse_mode="HTML")
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
            else:
                try:
                    message = "üîî<b>–ó–ê–í–¢–†–ê –ù–ï–¢ –ü–ê–†</b>"
                    await bot.send_message(user_id, message, parse_mode="HTML")
                    await bot.send_sticker(user_id,
                                           sticker="CAACAgIAAxkBAALhwmc2mEUZQFM6aIUNq8Stvo5VBzNsAAIoEgACSpfRS1V8PHkKHjrGNgQ")
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
